---
import Layout from "../layouts/Layout.astro";
---

<Layout>
  <div class="min-h-screen bg-gradient-to-br from-blue-50 via-indigo-50 to-purple-50">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
      
      <div class="text-center mb-8">
        <h1 class="page-title">Analyse des Pingouins</h1>
        <p class="text-xl text-gray-600 mb-2">
          Explorez les caract√©ristiques physiques des pingouins selon leur esp√®ce, √Æle et sexe
        </p>
        <p class="text-sm text-gray-500">
          Graphique : Longueur du bec (mm) vs Profondeur du bec (mm)
        </p>
      </div>

      <div class="card mb-8">
        
        <div class="card-header">
          <h3 class="text-lg font-semibold text-gray-900 mb-4">üîç Filtres</h3>
          <div class="grid grid-cols-1 md:grid-cols-3 gap-4">
            
            <div class="filter-group">
              <label for="species" class="filter-label">Esp√®ce</label>
              <select name="species" id="species" class="filter-select">
                <option value="">Toutes les esp√®ces</option>
                <option value="Adelie">Adelie</option>
                <option value="Chinstrap">Chinstrap</option>
                <option value="Gentoo">Gentoo</option>
              </select>
            </div>

            <div class="filter-group">
              <label for="island" class="filter-label">√éle</label>
              <select name="island" id="island" class="filter-select">
                <option value="">Toutes les √Æles</option>
                <option value="Biscoe">Biscoe</option> 
                <option value="Dream">Dream</option>
                <option value="Torgersen">Torgersen</option>
              </select>
            </div>

            <div class="filter-group">
              <label for="sex" class="filter-label">Sexe</label>
              <select name="sex" id="sex" class="filter-select">
                <option value="">Tous les sexes</option>
                <option value="MALE">M√¢le</option>
                <option value="FEMALE">Femelle</option>
              </select>
            </div>
          </div>
        </div>

        <div class="card-content">
          <div id="chart-info" class="text-center mb-4">
            <span class="text-sm text-gray-500 loading">Chargement des donn√©es...</span>
          </div>
          <div id="myplot" class="chart-container">
            <div class="chart-loading">
              <div class="loading-spinner"></div>
              <p>G√©n√©ration du graphique...</p>
            </div>
          </div>
        </div>
      </div>

      
      </div>
    </div>
  </div>

<script>
  import * as Plot from "@observablehq/plot";
  import penguins from "../assets/penguins.json";

  const selectSpecies = document.querySelector("#species") as HTMLSelectElement;
  const selectIsland = document.querySelector("#island") as HTMLSelectElement;
  const selectSex = document.querySelector("#sex") as HTMLSelectElement;
  const chartInfo = document.querySelector("#chart-info") as HTMLElement;

  interface Filters {
    species: string;
    island: string;
    sex: string;
  }

  function getFilters(): Filters {
    return {
      species: selectSpecies?.value || "",
      island: selectIsland?.value || "",
      sex: selectSex?.value || ""
    };
  }

  function filterPenguins(penguins: any[], filters: Filters): any[] {
    return penguins.filter((penguin: any) => {
      const matchSpecies = !filters.species || penguin.species === filters.species;
      const matchIsland = !filters.island || penguin.island === filters.island;
      const matchSex = !filters.sex || penguin.sex === filters.sex;
      
      return matchSpecies && matchIsland && matchSex;
    });
  }

  function updateChartInfo(filteredData: any[]) {
    const total = penguins.length;
    const filtered = filteredData.length;
    const percentage = Math.round((filtered / total) * 100);
    
    if (chartInfo) {
      chartInfo.innerHTML = `
        <span class="text-sm font-medium text-blue-600">
          ${filtered} pingouins affich√©s sur ${total} (${percentage}%)
        </span>
      `;
    }
  }

  function renderPlot() {
    const filters = getFilters();
    const div = document.querySelector("#myplot");
    
    if (div) {
      div.innerHTML = "";
    }
    
    const filteredData = filterPenguins(penguins, filters);
    updateChartInfo(filteredData);
    
    if (filteredData.length === 0) {
      if (div) {
        div.innerHTML = `
          <div class="chart-placeholder">
            <div class="text-center">
              <div class="text-4xl mb-4">üîç</div>
              <p class="text-gray-500">Aucun pingouin ne correspond aux filtres s√©lectionn√©s</p>
              <p class="text-sm text-gray-400 mt-2">Essayez de modifier vos crit√®res de recherche</p>
            </div>
          </div>
        `;
      }
      return;
    }
    
    const plot = Plot.plot({
      title: "Relation entre longueur et profondeur du bec",
      subtitle: `${filteredData.length} pingouins`,
      width: 800,
      height: 500,
      marginLeft: 60,
      marginBottom: 50,
      grid: true,
      color: {
        legend: true,
        domain: ["Adelie", "Chinstrap", "Gentoo"],
        range: ["#ff6b6b", "#4ecdc4", "#45b7d1"]
      },
      marks: [
        Plot.dot(filteredData, {
          x: "culmen_length_mm",
          y: "culmen_depth_mm",
          fill: "species",
          r: 5,
          opacity: 0.8,
          tip: true
        })
      ]
    });
    
    div?.append(plot);
  }

  selectSpecies?.addEventListener("change", renderPlot);
  selectIsland?.addEventListener("change", renderPlot);
  selectSex?.addEventListener("change", renderPlot);
  
  // Initial render
  renderPlot();
</script>

<style>
  .filter-group {
    @apply flex flex-col space-y-2;
  }
  
  .filter-label {
    @apply text-sm font-medium text-gray-700;
  }
  
  .filter-select {
    @apply block w-full px-3 py-2 border border-gray-300 rounded-lg shadow-sm 
           focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500
           bg-white transition-all duration-200 hover:border-gray-400;
  }
  
  .filter-select:focus {
    transform: translateY(-1px);
    box-shadow: 0 4px 12px rgba(59, 130, 246, 0.15);
  }

  .chart-container {
    min-height: 500px;
    background: white;
    border-radius: 12px;
    padding: 20px;
    border: 1px solid #e5e7eb;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .chart-placeholder {
    @apply flex items-center justify-center h-96 bg-gradient-to-br from-gray-100 to-gray-200 rounded-lg border-2 border-dashed border-gray-300;
  }

  .chart-loading {
    @apply text-gray-500 text-center;
  }

  .loading-spinner {
    @apply animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600 mx-auto mb-4;
  }
</style>
</Layout>